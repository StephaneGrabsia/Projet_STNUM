ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
ggplot(data=vp_cum,aes(x=cp,y=val_prop_cum))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Part d'inertie expliquée en fonction du nombre de CP")+
xlab("Nombre de composantes principales")+
ylab("Part d'inertie expliquée")+
scale_x_continuous(breaks=cp)
out_acp <- PCA(data[,c(3:14)],scale.unit=TRUE,ncp=13,graph=FALSE)
summary(out_acp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
ggplot(data=vp_cum,aes(x=cp,y=val_prop_cum))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Part d'inertie expliquée en fonction du nombre de CP")+
xlab("Nombre de composantes principales")+
ylab("Part d'inertie expliquée")+
scale_x_continuous(breaks=cp)
out_acp <- PCA(data[,c(3:15)],scale.unit=TRUE,ncp=13,graph=FALSE)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
ggplot(data=vp_cum,aes(x=cp,y=val_prop_cum))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Part d'inertie expliquée en fonction du nombre de CP")+
xlab("Nombre de composantes principales")+
ylab("Part d'inertie expliquée")+
scale_x_continuous(breaks=cp)
library(GGally)
library(ggplot2)
library(FactoMineR)
library(cluster)
library(factoextra)
library(heatmaply)
library(dplyr)
library(tidyr)
data <-read.csv("data_project.csv", sep=";")
print(data)
#ggpairs(data[c(3:13)])
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
midpoint = 0.5, limits = c(0, 1)
)
heatmaply_cor(
cor(data[c(3:14)]),
scale_fill_gradient=gradient_col,
cellnote=round(cor(data[c(3:14)]),2),
cellnote_color = "auto",
cellnote_textposition = "middle center",
cellnote_size = 6,
show_dendrogram=c(FALSE,FALSE),
)
data <- read.csv("data_project.csv", sep = ";")
print(data)
data_of_interest = data[c(3:5)]
hist(as.double(data_of_interest$energy.kcal_100g),freq=TRUE,xlab="Energy in kcal for 100g",main="Histogramme", breaks = 100)
hist(as.double(data_of_interest$proteins_100g),freq=TRUE,xlab="Proteins for 100g",main="Histogramme", breaks = 100)
hist(as.double(data_of_interest$sugars_100g),freq=TRUE,xlab="Sugars for 100g",main="Histogramme", breaks = 100)
plot(ecdf(data_of_interest$energy.kcal_100g),main="Energy")
plot(ecdf(data_of_interest$proteins_100g),main="Proteins")
plot(ecdf(data_of_interest$sugars_100g),main="Sugar")
boxplot(data_of_interest[,c("energy.kcal_100g")],main="Boites à moustaches des trois variables")
boxplot(data_of_interest[,c("proteins_100g","sugars_100g")],main="Boites à moustaches des trois variables")
mytable <- table(data$nutriscore_grade)
options(digits=4)
percentage <- round(100*mytable/sum(mytable),digits = 2)
lbls <- paste(names(mytable), "\n", percentage, "%", sep="")
pie(mytable, labels = lbls,
main="Nutriscore grade repartition")
sapply(data[c(3:14)], var)
out_acp <- PCA(data[,c(3:14)],scale.unit=TRUE,ncp=12,graph=FALSE)
summary(out_acp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
ggplot(data=vp_cum,aes(x=cp,y=val_prop_cum))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Part d'inertie expliquée en fonction du nombre de CP")+
xlab("Nombre de composantes principales")+
ylab("Part d'inertie expliquée")+
scale_x_continuous(breaks=cp)
plot.PCA(out_acp,shadow=TRUE,cex=0.8,axes=c(1,2),choix="var",new.plot=TRUE,
title="Cercle des corrélations")
out_acp <- PCA(data[,c(3:10, 12:14)],scale.unit=TRUE,ncp=12,graph=FALSE)
summary(out_acp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
ggplot(data=vp_cum,aes(x=cp,y=val_prop_cum))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Part d'inertie expliquée en fonction du nombre de CP")+
xlab("Nombre de composantes principales")+
ylab("Part d'inertie expliquée")+
scale_x_continuous(breaks=cp)
plot.PCA(out_acp,shadow=TRUE,cex=0.8,axes=c(1,2),choix="var",new.plot=TRUE,
title="Cercle des corrélations")
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
midpoint = 0.5, limits = c(0, 1)
)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
midpoint = 0.5, limits = c(0, 1)
)
ggplot(data=vp,aes(x=cp,y=val_prop), gradient_col)+
geom_bar(stat="identity",fill="steelblue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
midpoint = 0.5, limits = c(0, 1)
)
ggplot(data=vp,aes(x=cp,y=val_prop), )+
geom_bar(stat="identity",fill=gradient_col)+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
midpoint = 0.5, limits = c(0, 1)
)
ggplot(data=vp,aes(x=cp,y=val_prop), )+
geom_bar(stat="identity",fill="blue"l)+
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
midpoint = 0.5, limits = c(0, 1)
)
ggplot(data=vp,aes(x=cp,y=val_prop), )+
geom_bar(stat="identity",fill="blue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
midpoint = 0.5, limits = c(0, 1)
)
ggplot(data=vp,aes(x=cp,y=val_prop), scale_fill_gradient=gradient_col)+
geom_bar(stat="identity",fill="blue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
midpoint = 0.5, limits = c(0, 1)
)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",scale_fill_gradient=gradient_col)+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",scale_fill_gradient=gradient_col)+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="blue")+
theme_minimal()+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="blue")+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="blue", width = 1)+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop))+
geom_bar(stat="identity",fill="blue", width = 0.5)+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop, fill=cp))+
geom_bar(stat="identity",fill="blue", width = 0.5)+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop, fill=cp))+
geom_bar(stat="identity", width = 0.5)+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop, fill=val_prop))+
geom_bar(stat="identity", width = 0.5)+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
ggplot(data=vp,aes(x=cp,y=val_prop, fill=val_prop))+
geom_bar(stat="identity", width = 0.7)+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
plot.PCA(out_acp,cex=0.8,axes=c(1,2),choix="var",new.plot=TRUE,
title="Cercle des corrélations")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,axes=c(1,2),choix="var",new.plot=TRUE,
title="Cercle des corrélations")
val_prop <- out_acp$eig[,"eigenvalue"]
val_prop_cum <- cumsum(val_prop)/sum(val_prop)
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
vp_cum <- data.frame(cp=cp,val_prop_cum=val_prop_cum)
ggplot(data=vp,aes(x=cp,y=val_prop, fill=val_prop))+
geom_bar(stat="identity", width = 0.7)+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
gradient_col <- ggplot2::scale_fill_gradient2(
low = "blue", high = "red",
)
plot.PCA(out_acp,shadow=TRUE,cex=0.8,axes=c(1,2),choix="var",new.plot=TRUE,
title="Cercle des corrélations",scale_fill_gradient=gradient_col,)
plot.PCA(out_acp,shadow=TRUE,cex=0.8,axes=c(1,2),choix="var",new.plot=TRUE,
title="Cercle des corrélations", gradient.cols = c("blue", "red"),)
fviz_pca_var(out_acp, axes = c(1,2),
col.var = "cos2",
gradient.cols = c("blue", "orange", "red"),
repel = TRUE)
fviz_pca_var(out_acp, axes = c(1,2),
col.var = "cos2",
gradient.cols = c("blue", "red"),
repel = TRUE)
fviz_pca_var(out_acp, axes = c(1,2),
col.var = "cos2",
gradient.cols = c("blue"),
repel = TRUE)
fviz_pca_var(out_acp, axes = c(1,2),
col.var = "cos2",
gradient.cols = c("red","blue"),
repel = TRUE)
co2 <- out_acp$ind$cos2
co2
contrib <- out_acp$ind$contrib
contrib
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="contrib 10",
title="Les 10 individus avec la plus forte contribution")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 10",
title="Les 10 individus avec le plus fort ?")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 0.5",
title="Les individus avec un ? supérieur à 0.5")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="contrib 10",
title="Les 10 individus avec la plus forte contribution", color="red")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 10",
title="Les 10 individus avec le plus fort ?")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 0.5",
title="Les individus avec un ? supérieur à 0.5")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="contrib 10",
title="Les 10 individus avec la plus forte contribution", fill="red")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 10",
title="Les 10 individus avec le plus fort ?")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 0.5",
title="Les individus avec un ? supérieur à 0.5")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="contrib 10",
title="Les 10 individus avec la plus forte contribution", colour="red")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 10",
title="Les 10 individus avec le plus fort ?")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 0.5",
title="Les individus avec un ? supérieur à 0.5")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="contrib 10",
title="Les 10 individus avec la plus forte contribution", colour="cos2")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 10",
title="Les 10 individus avec le plus fort ?")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 0.5",
title="Les individus avec un ? supérieur à 0.5")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="contrib 10",
title="Les 10 individus avec la plus forte contribution", color="cos2")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 10",
title="Les 10 individus avec le plus fort ?")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 0.5",
title="Les individus avec un ? supérieur à 0.5")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="contrib 10",
title="Les 10 individus avec la plus forte contribution", col.var="cos2")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 10",
title="Les 10 individus avec le plus fort ?")
plot.PCA(out_acp,shadow=TRUE,cex=0.8,select="cos2 0.5",
title="Les individus avec un ? supérieur à 0.5")
plot.PCA(out_acp,shadow=TRUE,cex=2,axes=c(1,2),choix="ind",label="none",new.plot=TRUE,
title="Projection des individus")
plot.PCA(out_acp,shadow=TRUE,cex=2,axes=c(1,2),choix="ind",label="none",new.plot=TRUE, title="Projection des ingrédients")
plot.PCA(out_acp,shadow=TRUE,cex=2,axes=c(1,2),choix="ind",label="none",new.plot=TRUE, title="Projection des ingrédients", col.var = "cos2")
plot.PCA(out_acp,shadow=TRUE,cex=2,axes=c(1,2),choix="ind",label="none",new.plot=TRUE, title="Projection des ingrédients",gradient.cols = c("red","blue") col.var = "cos2")
axeX <- acp3$ind$coord[,1]
axeX <- out_acp$ind$coord[,1]
axeY <- out_acp$ind$coord[,2]
plot(axeX,axeY,pch=16)
grid()
text(axeX,axeY,rownames(x))
axeX <- out_acp$ind$coord[,1]
axeY <- out_acp$ind$coord[,2]
plot(axeX,axeY,pch=16)
grid()
text(axeX,axeY)
plot.PCA(out_acp,shadow=TRUE,cex=2,axes=c(1,2),choix="ind",label="none",new.plot=TRUE, title="Projection des ingrédients")
fviz_eig(out_acp, addlabels = TRUE, ylim = c(0, 50))
fviz_eig(out_acp, addlabels = TRUE, ylim = c(0, 50), fill =val_prop,
barcolor = "steelblue", linecolor = "black",)
val_prop <- out_acp$eig[,"eigenvalue"]
cp <- 1:length(val_prop)
vp <- data.frame(cp=cp,val_prop=val_prop)
ggplot(data=vp,aes(x=cp,y=val_prop, fill=val_prop))+
geom_bar(stat="identity", width = 0.7)+
ggtitle("Eboulis des valeurs propres")+
xlab("Nombre de composantes principales")+
ylab("Valeurs propres")+
scale_x_continuous(breaks=cp)
fviz_eig(out_acp, addlabels = TRUE, ylim = c(0, 50), fill =val_prop)
fviz_eig(out_acp, addlabels = TRUE, ylim = c(0, 50), barfill ="blue")
fviz_eig(out_acp, addlabels = TRUE, ylim = c(0, 50), barfill ="blue", width=0.7)
fviz_eig(out_acp, addlabels = TRUE, ylim = c(0, 50), gradient.cols = c("red","blue"), width=0.7)
fviz_eig(out_acp, addlabels = TRUE, ylim = c(0, 50), col.var= "cos2",gradient.cols = c("red","blue"), width=0.7)
fviz_eig(out_acp, addlabels = TRUE, ylim = c(0, 50), col.var= val_prop,gradient.cols = c("red","blue"), width=0.7)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
library("corrplot")
corrplot(var$contrib, is.corr=FALSE)
library("corrplot")
corrplot(out_acp$ind$contrib, is.corr=FALSE)
library("corrplot")
corrplot(out_acp$contrib, is.corr=FALSE)
head(var$contrib, 3)
head(var$contrib, 3)
head(var$contrib, 3)
library("corrplot")
corrplot(var$contrib(c[3:14]), is.corr=FALSE)
